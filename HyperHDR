<?xml version="1.0"?>
<Container version="2">
    <Name>hyperhdr</Name>
    <Registry>https://hub.docker.com/r/nocturno/</Registry>
    <Repository>nocturno/hyper-hdr</Repository>
    <Github>https://github.com/awawa-dev/HyperHDR</Github>
    <Network>bridge</Network>
    <MyIP/>
    <Privileged>false</Privileged>
    <Support>https://github.com/awawa-dev/HyperHDR</Support>
    <Project/>
    <Overview>
        This is HyperHDR docker thanks to the developer Awawa https://github.com/awawa-dev/HyperHDR

        Open source ambient lighting implementation for television sets based on the video and audio streams analysis, using performance improvements 
        especially for USB grabbers. Single and multi-threaded video processing optimization for Windows, macOS and Linux x64 & ARM (Raspberry Pi and others) 
        for SDR/HDR streams captured by USB grabbers using pre-calculated LUT tables. Direct support for USB grabbers under Windows 10 (Microsoft Media Foundation), 
        Linux (v4l2) and macOS (AVFoundation). Also software screen grabbers are available.
    </Overview>
    <Category>HomeAutomation:</Category>
    <WebUI>http://[IP]:[PORT:8090]/status</WebUI>
    <TemplateURL/>
    <Icon>https://avatars.githubusercontent.com/u/69086569?s=400&v=4</Icon>
    <ExtraParams/>
    <PostArgs/>
    <DateInstalled>1527397055</DateInstalled>
    <DonateText/>
    <DonateLink/>
    <DonateImg/>
    <MinVer/>
    <Description>The device path should match your video input in this case is 0 or if you don't know your video device the easiest way is replace
      --device=/dev/video0 for --privileged (not recommended)

      The PGID and the PUID both are set to 1000 wich is the default for the pi user. If you are not sure of your PGID or PUID just type id in the terminal 
      of the pi and you will get something like this uid=1000(pi) gid=1000(pi) groups=1000(pi),4(adm). Just replace the uid number in the PUID and the same 
      with the gid in PGID.
      
      I recommend using the compose file!</Description>
    <Networking>
        <Mode>bridge</Mode>
        <Publish>
            <Port>
                <HostPort>8090</HostPort>
                <ContainerPort>8090</ContainerPort>
                <Protocol>tcp</Protocol>
            </Port>
        </Publish>
    </Networking>
    <Data>
        <Volume>
            <HostDir>/mnt/user/appdata/hyperhdr</HostDir>
            <ContainerDir>/data</ContainerDir>
            <Mode>rw</Mode>
        </Volume>
    </Data>
    <Environment/>
    <Labels/>
    <Config Name="AppData Config Path" Target="/config" Default="/mnt/user/appdata/hyperhdr" Mode="rw" Description="Container Path: /config"
            Type="Path" Display="advanced-hide" Required="true" Mask="false">/mnt/user/appdata/hyperhdr</Config>
    <Config Name="Host Port" Target="8090" Default="8090" Mode="tcp" Description="Container Port: 8090" Type="Port" Display="always"
            Required="true" Mask="false">8090</Config>
    <Config Name="Protobuffer" Target="19445" Default="19445" Mode="tcp" Description="Protobuffer" Type="Port" Display="always"
            Required="true" Mask="false"></Config>
    <Config Name="Flatbuffer" Target="19400" Default="19400" Mode="tcp" Description="Protobuffer" Type="Port" Display="always"
            Required="true" Mask="false"></Config>
    <Config Name="JSON-Server" Target="19444" Default="19444" Mode="tcp" Description="Protobuffer" Type="Port" Display="always"
            Required="true" Mask="false"></Config>
</Container>
